plugins {
	id "com.github.ethankhall.semantic-versioning" version "1.1.0"
	id "io.spring.dependency-management" version "0.6.0.RELEASE"
}

apply plugin: 'base'

def ossrhReleaseUrl = hasProperty('ossrhReleaseUrl') ? ossrhReleaseUrl : System.getenv('ossrhReleaseUrl')
def ossrhSnapshotUrl = hasProperty('ossrhSnapshotUrl') ? ossrhSnapshotUrl : System.getenv('ossrhSnapshotUrl')
def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('ossrhUsername')
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('ossrhPassword')

subprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'com.github.ethankhall.semantic-versioning'

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	archivesBaseName = "$rootProject.name-$project.name"
	group = 'com.github.stocky37'
	version.with { major = 0; minor = 1; patch = 0 }

	repositories {
		mavenCentral()
	}

	dependencyManagement {
		imports {
			mavenBom 'com.yammer.tenacity:tenacity-bom:1.0.1'
			mavenBom 'io.dropwizard:dropwizard-bom:1.0.0'
		}

		dependencies {
			dependency 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.7.6'
			dependency 'com.smoketurner:dropwizard-swagger:1.0.0-1'
			dependency 'redis.clients:jedis:2.8.1'

			// utils
			dependency 'org.springframework:spring-core:4.3.2.RELEASE'
			dependency 'commons-io:commons-io:2.5'

			// testing
			dependency 'junit:junit:4.12'
			dependency 'org.hamcrest:hamcrest-all:1.3'
			dependency 'uk.co.datumedge:hamcrest-json:0.2'
			dependency 'nl.jqno.equalsverifier:equalsverifier:2.1.5'
		}
	}

	dependencies {
		testCompile 'junit:junit'
		testCompile 'nl.jqno.equalsverifier:equalsverifier'
	}

	compileJava {
		options.compilerArgs << '-parameters'
	}

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourceJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifactId = "$archivesBaseName"

				from components.java

				artifact javadocJar
				artifact sourceJar

				pom.withXml {
					asNode().children().last() + {
						resolveStrategy = Closure.DELEGATE_FIRST
						name "$project.ext.name"
						description "$project.ext.description"
						url 'https://github.com/stocky37/dropwizard-util'

						scm {
							url 'git@github.com:stocky37/dropwizard-util.git'
							connection 'git@github.com:stocky37/dropwizard-util.git'
							developerConnection 'git@github.com:stocky37/dropwizard-util.git'
						}

						licenses {
							license {
								name 'MIT License'
								url 'http://www.opensource.org/licenses/mit-license.php'
							}
						}

						developers {
							developer {
								id 'stocky37'
								name 'Tom Stockwell'
								email 'tom@stockwells.me'
							}
						}
					}
				}
			}
		}

		repositories {
//			maven {
//				url "file:/${project.buildDir}/artifacts"
//			}

			maven {
				if (project.version.releaseBuild) {
					url ossrhReleaseUrl
				} else {
					url ossrhSnapshotUrl
				}
				credentials {
					username = ossrhUsername
					password = ossrhPassword
				}
			}
		}
	}
}
