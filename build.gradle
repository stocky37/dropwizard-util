buildscript { repositories { jcenter() } }
plugins {
	id 'base'
	id 'io.spring.dependency-management' version '0.6.0.RELEASE' apply false
	id 'nebula.contacts' version '3.0.1'
	id 'nebula.info' version '3.2.1' apply false
	id 'nebula.javadoc-jar' version '4.9.1' apply false
	id 'nebula.lint' version '5.0.0'
	id 'nebula.maven-apache-license' version '4.9.1' apply false
	id 'nebula.maven-publish' version '4.9.1' apply false
	id 'nebula.release' version '4.1.0'
	id 'nebula.resolution-rules' version '2.0.0' apply false
	id 'nebula.source-jar' version '4.9.1' apply false
}

def ossrhReleaseUrl = hasProperty('ossrhReleaseUrl') ? ossrhReleaseUrl : System.getenv('ossrhReleaseUrl')
def ossrhSnapshotUrl = hasProperty('ossrhSnapshotUrl') ? ossrhSnapshotUrl : System.getenv('ossrhSnapshotUrl')
def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('ossrhUsername')
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('ossrhPassword')

apply from: 'lint.gradle'

allprojects {
	apply plugin: 'nebula.info'
	apply plugin: 'nebula.resolution-rules'
	group = 'com.github.stocky37'
	contacts 'tom@stockwells.me'

	repositories {
		mavenCentral()
	}

	dependencies {
		resolutionRules 'com.netflix.nebula:gradle-resolution-rules:latest.release'
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'nebula.contacts'
	apply plugin: 'nebula.javadoc-jar'
	apply plugin: 'nebula.maven-publish'
	apply plugin: 'nebula.source-jar'

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	dependencyManagement {
		imports {
			mavenBom 'com.yammer.tenacity:tenacity-bom:1.0.1'
			mavenBom 'io.dropwizard:dropwizard-bom:1.0.0'
		}

		dependencies {
			dependency 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.7.6'
			dependency 'com.smoketurner:dropwizard-swagger:1.0.0-1'
			dependency 'redis.clients:jedis:2.8.1'

			// utils
			dependency 'org.springframework:spring-core:4.3.2.RELEASE'
			dependency 'commons-io:commons-io:2.5'

			// testing
			dependency 'junit:junit:4.12'
			dependency 'org.hamcrest:hamcrest-all:1.3'
			dependency 'uk.co.datumedge:hamcrest-json:0.2'
			dependency 'nl.jqno.equalsverifier:equalsverifier:2.1.5'
		}
	}

	dependencies {
		testCompile 'junit:junit'
		testCompile 'nl.jqno.equalsverifier:equalsverifier'
	}

	compileJava {
		options.compilerArgs << '-parameters'
	}

	publishing {
		publications {
			nebula(MavenPublication) {
				artifactId = "$rootProject.name-$project.name"
			}
		}

		repositories {
			maven {
				name = 'ossrh'
				if (!project.version.toString().endsWith('-SNAPSHOT')) {
					url ossrhReleaseUrl
				} else {
					url ossrhSnapshotUrl
				}
				credentials {
					username = ossrhUsername
					password = ossrhPassword
				}
			}
		}
	}
}
